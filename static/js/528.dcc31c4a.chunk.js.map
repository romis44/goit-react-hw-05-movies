{"version":3,"file":"static/js/528.dcc31c4a.chunk.js","mappings":"qPAEaA,EAAYC,EAAAA,GAAAA,KAAH,+FAcTC,EAAMD,EAAAA,GAAAA,IAAH,4EAKHE,EAASF,EAAAA,GAAAA,IAAH,kG,6ICjBJ,SAASG,EAAT,GAA2B,IAATC,EAAQ,EAARA,KAC/B,OACE,wBACGA,GACCA,EAAKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACP,2BACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEC,IACEF,EAAY,6CAC8BA,GACtCG,EAENC,IAAKL,EACLM,MAAM,MACNC,OAAO,WAGX,wBAAKP,KACL,uCAAeE,OAdRH,EADF,KAoBhB,CCrBc,SAASS,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaa,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJN,EAAQM,EACT,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACP,KAGF,+BACE,SAACf,EAAD,CAAQC,KAAMA,KAGnB,C,mMCrBKwB,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,oGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,cACxBG,EADwB,yBAIvBA,EAAST,MAJc,2CAAH,qDAOhBU,EAAc,mCAAG,WAAMC,GAAN,uFACLH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCK,EADhC,+CADK,cACtBF,EADsB,yBAIrBA,EAAST,KAAKY,SAJO,2CAAH,sDAOdC,EAAe,mCAAG,WAAM9B,GAAN,uFACNyB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAtB,EADA,oBACcuB,EADd,qBADM,cACvBG,EADuB,yBAItBA,EAAST,MAJa,2CAAH,sDAOfF,EAAe,mCAAG,WAAMH,GAAN,uFACNa,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAV,EADA,4BAC2BW,EAD3B,oBADM,cACvBG,EADuB,yBAItBA,EAAST,KAAKnB,MAJQ,2CAAH,sDAOfiC,EAAe,mCAAG,WAAMnB,GAAN,uFACNa,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAV,EADA,4BAC2BW,EAD3B,2BADM,cACvBG,EADuB,yBAItBA,EAAST,KAAKY,SAJQ,2CAAH,qD","sources":["components/List/List.styled.jsx","components/Actors.jsx","pages/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListStyle = styled.span`\n  font-size: 15px;\n  font-weight: 500;\n  transition-duration: 0.5s;\n`;\n\n// export const Item = styled.li`\n//   transform: scale(1);\n//   transition: transform 250ms linear;\n//   &:hover {\n//     transform: scale(1.04);\n//   }\n// `;\n\nexport const Img = styled.img`\n  border-radius: 10px;\n  border: 1px solid green;\n`;\n\nexport const ImgBox = styled.div`\n  width: 300px;\n  height: 450px;\n  display: flex;\n  object-fit: cover;\n`;\n","import PropTypes from 'prop-types';\nimport image from '../images/images.png';\nimport { ImgBox, Img } from './List/List.styled';\n\nexport default function Actors({ cast }) {\n  return (\n    <ul>\n      {cast &&\n        cast.map(({ id, name, profile_path, character }) => (\n          <li key={id}>\n            <ImgBox>\n              <Img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/original${profile_path}`\n                    : image\n                }\n                alt={name}\n                width=\"300\"\n                height=\"300\"\n              />\n            </ImgBox>\n            <h2>{name}</h2>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nActors.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCredits } from 'services/api';\n\nimport Actors from 'components/Actors';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(data => {\n        setCast(data);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <>\n      <Actors cast={cast} />\n    </>\n  );\n}\n","import axios from 'axios';\n\n// const API_KEY = 'ca6651118169730896bcd7a53aacb58e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a2700da0d8f509f67de6165a96b841be';\n\nexport const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovie = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US&`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["ListStyle","styled","Img","ImgBox","Actors","cast","map","id","name","profile_path","character","src","image","alt","width","height","Cast","useState","setCast","movieId","useParams","useEffect","getMovieCredits","then","data","catch","error","console","log","BASE_URL","API_KEY","getTrendingMovie","axios","response","getSearchMovie","query","results","getMovieDetails","getMovieReviews"],"sourceRoot":""}