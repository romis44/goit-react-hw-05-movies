{"version":3,"file":"static/js/256.a821ebe6.chunk.js","mappings":"oOAEe,SAASA,EAAT,GAA8B,IAAZC,EAAW,EAAXA,QAC/B,OACE,wBACGA,EAAQC,OAAS,EAChBD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EADC,KAOZ,+EAIP,CCVc,SAASG,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJN,EAAWM,EACZ,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACP,EAAST,KAEN,8BAAGA,IAAW,SAACD,EAAD,CAAQC,QAASA,KACvC,C,+LCjBKmB,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,oGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,cACxBG,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qDAOhBC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCM,EADhC,+CADK,cACtBH,EADsB,yBAIrBA,EAASC,KAAKG,SAJO,2CAAH,sDAOdC,EAAe,mCAAG,WAAMzB,GAAN,uFACNmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAhB,EADA,oBACciB,EADd,qBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMpB,GAAN,uFACNa,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAV,EADA,4BAC2BW,EAD3B,oBADM,cACvBG,EADuB,yBAItBA,EAASC,KAAKM,MAJQ,2CAAH,sDAOflB,EAAe,mCAAG,WAAMH,GAAN,uFACNa,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAV,EADA,4BAC2BW,EAD3B,2BADM,cACvBG,EADuB,yBAItBA,EAASC,KAAKG,SAJQ,2CAAH,qD","sources":["components/Review.jsx","pages/Reviews.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Review({ reviews }) {\n  return (\n    <ul>\n      {reviews.length > 0 ? (\n        reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>{author}</p>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <h2>Sorry, we don't have any reviews about this movie</h2>\n      )}\n    </ul>\n  );\n}\n\nReview.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'services/api';\n\nimport Review from 'components/Review';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(result => {\n        setReviews(result);\n      })\n      .catch(error => console.log(error));\n  }, [movieId, reviews]);\n\n  return <>{reviews && <Review reviews={reviews} />}</>;\n}\n","import axios from 'axios';\n\n// const API_KEY = 'ca6651118169730896bcd7a53aacb58e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a2700da0d8f509f67de6165a96b841be';\n\nexport const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovie = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US&`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["Review","reviews","length","map","id","author","content","Reviews","useState","setReviews","movieId","useParams","useEffect","getMovieReviews","then","result","catch","error","console","log","BASE_URL","API_KEY","getTrendingMovie","axios","response","data","getSearchMovie","query","results","getMovieDetails","getMovieCredits","cast"],"sourceRoot":""}